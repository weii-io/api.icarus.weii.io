datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             Int            @id @default(autoincrement())
  username       String         @unique
  email          String         @unique
  firstName      String
  lastName       String
  password       String
  projects       Project[] // Projects owned by the user
  assignedTasks  Task[] // Tasks assigned to the user
  projectsMember Project[]      @relation("ProjectMember")
  githubProfile  GithubProfile?
}

model Project {
  id              Int            @id @default(autoincrement())
  name            String
  description     String?
  githubRepoUrl   String?
  tasks           Task[]
  owner           User           @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId         Int
  members         User[]         @relation("ProjectMember")
  githubProfile   GithubProfile? @relation(name: "ProjectGithubProfile", fields: [githubProfileId], references: [id], onDelete: Restrict)
  githubProfileId Int?
}

model Task {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  dueDate     DateTime?
  completed   Boolean   @default(false)
  project     Project   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId   Int
  assignee    User?     @relation(fields: [assigneeId], references: [id], onDelete: Cascade)
  assigneeId  Int?
}

model GithubProfile {
  id          Int       @id @default(autoincrement())
  username    String    @unique
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int       @unique
  accessToken String
  projects    Project[] @relation(name: "ProjectGithubProfile")
}
